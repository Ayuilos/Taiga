/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TranslateImport } from './routes/translate'
import { Route as SettingsLayoutImport } from './routes/_settingsLayout'
import { Route as IndexImport } from './routes/index'
import { Route as ChatChatIdImport } from './routes/chat.$chatId'
import { Route as SettingsLayoutThemeConfigureImport } from './routes/_settingsLayout.theme-configure'
import { Route as SettingsLayoutSettingsIndexImport } from './routes/_settingsLayout.settings.index'
import { Route as SettingsLayoutSettingsManageSearchApisImport } from './routes/_settingsLayout.settings.manage-search-apis'
import { Route as SettingsLayoutSettingsManageDefaultModelsImport } from './routes/_settingsLayout.settings.manage-default-models'

// Create/Update Routes

const TranslateRoute = TranslateImport.update({
  id: '/translate',
  path: '/translate',
  getParentRoute: () => rootRoute,
} as any)

const SettingsLayoutRoute = SettingsLayoutImport.update({
  id: '/_settingsLayout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ChatChatIdRoute = ChatChatIdImport.update({
  id: '/chat/$chatId',
  path: '/chat/$chatId',
  getParentRoute: () => rootRoute,
} as any)

const SettingsLayoutThemeConfigureRoute =
  SettingsLayoutThemeConfigureImport.update({
    id: '/theme-configure',
    path: '/theme-configure',
    getParentRoute: () => SettingsLayoutRoute,
  } as any)

const SettingsLayoutSettingsIndexRoute =
  SettingsLayoutSettingsIndexImport.update({
    id: '/settings/',
    path: '/settings/',
    getParentRoute: () => SettingsLayoutRoute,
  } as any)

const SettingsLayoutSettingsManageSearchApisRoute =
  SettingsLayoutSettingsManageSearchApisImport.update({
    id: '/settings/manage-search-apis',
    path: '/settings/manage-search-apis',
    getParentRoute: () => SettingsLayoutRoute,
  } as any)

const SettingsLayoutSettingsManageDefaultModelsRoute =
  SettingsLayoutSettingsManageDefaultModelsImport.update({
    id: '/settings/manage-default-models',
    path: '/settings/manage-default-models',
    getParentRoute: () => SettingsLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_settingsLayout': {
      id: '/_settingsLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof SettingsLayoutImport
      parentRoute: typeof rootRoute
    }
    '/translate': {
      id: '/translate'
      path: '/translate'
      fullPath: '/translate'
      preLoaderRoute: typeof TranslateImport
      parentRoute: typeof rootRoute
    }
    '/_settingsLayout/theme-configure': {
      id: '/_settingsLayout/theme-configure'
      path: '/theme-configure'
      fullPath: '/theme-configure'
      preLoaderRoute: typeof SettingsLayoutThemeConfigureImport
      parentRoute: typeof SettingsLayoutImport
    }
    '/chat/$chatId': {
      id: '/chat/$chatId'
      path: '/chat/$chatId'
      fullPath: '/chat/$chatId'
      preLoaderRoute: typeof ChatChatIdImport
      parentRoute: typeof rootRoute
    }
    '/_settingsLayout/settings/manage-default-models': {
      id: '/_settingsLayout/settings/manage-default-models'
      path: '/settings/manage-default-models'
      fullPath: '/settings/manage-default-models'
      preLoaderRoute: typeof SettingsLayoutSettingsManageDefaultModelsImport
      parentRoute: typeof SettingsLayoutImport
    }
    '/_settingsLayout/settings/manage-search-apis': {
      id: '/_settingsLayout/settings/manage-search-apis'
      path: '/settings/manage-search-apis'
      fullPath: '/settings/manage-search-apis'
      preLoaderRoute: typeof SettingsLayoutSettingsManageSearchApisImport
      parentRoute: typeof SettingsLayoutImport
    }
    '/_settingsLayout/settings/': {
      id: '/_settingsLayout/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsLayoutSettingsIndexImport
      parentRoute: typeof SettingsLayoutImport
    }
  }
}

// Create and export the route tree

interface SettingsLayoutRouteChildren {
  SettingsLayoutThemeConfigureRoute: typeof SettingsLayoutThemeConfigureRoute
  SettingsLayoutSettingsManageDefaultModelsRoute: typeof SettingsLayoutSettingsManageDefaultModelsRoute
  SettingsLayoutSettingsManageSearchApisRoute: typeof SettingsLayoutSettingsManageSearchApisRoute
  SettingsLayoutSettingsIndexRoute: typeof SettingsLayoutSettingsIndexRoute
}

const SettingsLayoutRouteChildren: SettingsLayoutRouteChildren = {
  SettingsLayoutThemeConfigureRoute: SettingsLayoutThemeConfigureRoute,
  SettingsLayoutSettingsManageDefaultModelsRoute:
    SettingsLayoutSettingsManageDefaultModelsRoute,
  SettingsLayoutSettingsManageSearchApisRoute:
    SettingsLayoutSettingsManageSearchApisRoute,
  SettingsLayoutSettingsIndexRoute: SettingsLayoutSettingsIndexRoute,
}

const SettingsLayoutRouteWithChildren = SettingsLayoutRoute._addFileChildren(
  SettingsLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof SettingsLayoutRouteWithChildren
  '/translate': typeof TranslateRoute
  '/theme-configure': typeof SettingsLayoutThemeConfigureRoute
  '/chat/$chatId': typeof ChatChatIdRoute
  '/settings/manage-default-models': typeof SettingsLayoutSettingsManageDefaultModelsRoute
  '/settings/manage-search-apis': typeof SettingsLayoutSettingsManageSearchApisRoute
  '/settings': typeof SettingsLayoutSettingsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof SettingsLayoutRouteWithChildren
  '/translate': typeof TranslateRoute
  '/theme-configure': typeof SettingsLayoutThemeConfigureRoute
  '/chat/$chatId': typeof ChatChatIdRoute
  '/settings/manage-default-models': typeof SettingsLayoutSettingsManageDefaultModelsRoute
  '/settings/manage-search-apis': typeof SettingsLayoutSettingsManageSearchApisRoute
  '/settings': typeof SettingsLayoutSettingsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_settingsLayout': typeof SettingsLayoutRouteWithChildren
  '/translate': typeof TranslateRoute
  '/_settingsLayout/theme-configure': typeof SettingsLayoutThemeConfigureRoute
  '/chat/$chatId': typeof ChatChatIdRoute
  '/_settingsLayout/settings/manage-default-models': typeof SettingsLayoutSettingsManageDefaultModelsRoute
  '/_settingsLayout/settings/manage-search-apis': typeof SettingsLayoutSettingsManageSearchApisRoute
  '/_settingsLayout/settings/': typeof SettingsLayoutSettingsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/translate'
    | '/theme-configure'
    | '/chat/$chatId'
    | '/settings/manage-default-models'
    | '/settings/manage-search-apis'
    | '/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/translate'
    | '/theme-configure'
    | '/chat/$chatId'
    | '/settings/manage-default-models'
    | '/settings/manage-search-apis'
    | '/settings'
  id:
    | '__root__'
    | '/'
    | '/_settingsLayout'
    | '/translate'
    | '/_settingsLayout/theme-configure'
    | '/chat/$chatId'
    | '/_settingsLayout/settings/manage-default-models'
    | '/_settingsLayout/settings/manage-search-apis'
    | '/_settingsLayout/settings/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SettingsLayoutRoute: typeof SettingsLayoutRouteWithChildren
  TranslateRoute: typeof TranslateRoute
  ChatChatIdRoute: typeof ChatChatIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SettingsLayoutRoute: SettingsLayoutRouteWithChildren,
  TranslateRoute: TranslateRoute,
  ChatChatIdRoute: ChatChatIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_settingsLayout",
        "/translate",
        "/chat/$chatId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_settingsLayout": {
      "filePath": "_settingsLayout.tsx",
      "children": [
        "/_settingsLayout/theme-configure",
        "/_settingsLayout/settings/manage-default-models",
        "/_settingsLayout/settings/manage-search-apis",
        "/_settingsLayout/settings/"
      ]
    },
    "/translate": {
      "filePath": "translate.tsx"
    },
    "/_settingsLayout/theme-configure": {
      "filePath": "_settingsLayout.theme-configure.tsx",
      "parent": "/_settingsLayout"
    },
    "/chat/$chatId": {
      "filePath": "chat.$chatId.tsx"
    },
    "/_settingsLayout/settings/manage-default-models": {
      "filePath": "_settingsLayout.settings.manage-default-models.tsx",
      "parent": "/_settingsLayout"
    },
    "/_settingsLayout/settings/manage-search-apis": {
      "filePath": "_settingsLayout.settings.manage-search-apis.tsx",
      "parent": "/_settingsLayout"
    },
    "/_settingsLayout/settings/": {
      "filePath": "_settingsLayout.settings.index.tsx",
      "parent": "/_settingsLayout"
    }
  }
}
ROUTE_MANIFEST_END */
